var dcomethealth = dcomethealth || {};
var payerData = {};
dcomethealth.CreateOPBill = (function () {
    var id = "CreateOPBill";
    var parameters = {userId: null};
    function init() {
        $("#main_navigation_bar").append('<div id="' + id + '" class="main_container">');
        $("#" + id).load("pages/html/" + id + ".html", function () {
            dcomethealth.datatypes.applyDataTypes($("#" + id));
            mrn_autocomplete();
            autocomplete();
            var searchParams = {"staffCategory": 237};
            var options = '';
            dcomethealth.MasterResource.searchStaff(searchParams, function (data) {
                $.each(data, function (idx, Val) {
                    options += '<option value="' + Val.id + '">' + Val.staffName + '</option>';
                });
                $("#VDName").html(options);
            });
            if (parseInt(dcomethealth.commonInit) !== 0) {
                $('#head_OP').text('Billing Info');
                $("#btns_state").empty();
                $('#paidDiv').removeClass('hidden');
                $('#dueDiv').removeClass('hidden');
                var categories = [];
                $.each(dcomethealth.actionDatalist, function (pIdx, datalist) {
                    var div = $("#btns_state");
                    if ($.inArray(datalist.boaName, categories) === -1) {
                        categories.push(datalist.boaName);
                        if (datalist.boaName === "BUILT IN ACTION") {
                            div.append('<button class="btn-primary btn" id="' + datalist.boaCode + '">Submit</button>');
                        } else {
                            div.append('<button class="btn-primary btn" id="' + datalist.boaCode + '">' + datalist.boaName + '</button>');
                        }
                    }
                });
                var boRID = dcomethealth.boRID;
                if (parseInt(dcomethealth.bomtypeIndex) !== 35) {
                    var searchObj = {"id": boRID};
                    dcomethealth.BillingResource.searchBilling(searchObj, function (data) {
                        $.each(data, function (pIdx, data) {
                            $('#billHRID').val(data.billH.id);
                            $('#patientRID').val(data.billH.bhPatientRID);
                            $('#visitRID').val(data.billH.bhPatientVisitRID);
                            $('#billNo').val(data.billH.bhBillNo);
                            $('#serviceGrossAmount').val(data.billH.bhGrossAmount);
                            $('#serviceDiscountAmount').val(data.billH.bhTotalDiscountAmount);
                            $('#serviceNetAmount').val(data.billH.bhNetAmount);
                            $('#billHPaidAmount').val(data.billH.bhPaidAmount);
                            $('#billHDueAmount').val(data.billH.bhDueAmount);
                            $.each(data.patient, function (pIdx, patient) {
                                $('#mrnSearch').val(patient.patMrnNo);
                                $('#PatientName').val(patient.patFullName);
                                if (patient.patDob !== undefined) {
                                    var c = patient.patDob.split('-');
                                    $('#PatientAge').val(Math.floor((new Date() - new Date(new Date(c[2], c[1] - 1, c[0]))) / (365.25 * 24 * 60 * 60 * 1000)));
                                }
                                var gen = '';
                                if (parseInt(patient.patGenderIndex) === 1) {
                                    gen = 'Male';
                                } else if (parseInt(patient.patGenderIndex) === 2) {
                                    gen = 'Female';
                                } else {
                                    gen = 'Transgender';
                                }
                                $('#PatientGender').val(gen);
//                            $('#PatientGender option[value="' + patient.patGenderIndex + '"]').prop('selected', true);
                                $('#patientMobile').val(patient.patPhoneNo);
                            });
                            $("#so_tbody").empty();
                            $.each(data.billH.billD, function (pIdx, billD) {
                                $("#so_tbody").append('<tr><td width="5%"><i class="dct-icon fa fa-minus-circle hidden" onclick="delete_row(this)"></i></td>\n\
                                    <td width="40%"><input type="text" id="serviceName" name="serviceName" value = "' + billD.bdItemName + '" onchange="ClearName(this)" ><input type="hidden" id="serviceRID" name="serviceRID" value="' + billD.bdItemRID + '">\n\
                                    <input type="hidden" id="serviceOrderRID" name="serviceOrderRID" value="' + billD.bdItemOrderRID + '"><input id="billDRID" type="hidden" value="' + billD.id + '"></td><td width="10%"><input id = "qtyService" type = "text" readonly="readonly" value = "' + billD.bdQty + '" name = "qtyService" ></td>\n\
                                    <td width="10%"><input type = "text" id = "serviceDisc" name = "serviceDisc" value = "' + billD.bdDiscountAmount + '"></td>\n\
                                    <td width="10%"><input type = "text" id = "MRP" name = "MRP" value = "' + billD.bdPrice + '" onBlur = "calculation(this)"></td>\n\
                                    <td width="20%"><input type = "text" id = "netAmount" name = "netAmount" value = "' + billD.bdNetAmount + '" onBlur = "calculation(this)"></td>\n\
                                    <td width="5%"><i class = "dct-icon fa fa-plus-square red" onclick = "insert_row("dyn_table", this)" ></i></td></tr>');
                            });
                        });
                    });
                } else {
                    $("#so_tbody").empty();
                    var searchObj = {"id": boRID};
                    dcomethealth.ClinicalResource.searchServiceRequest(searchObj, function (data) {
                        $.each(data, function (pIdx, data) {
                            $('#patientRID').val(data.serReqOpRID);
                            $('#visitRID').val(data.serReqOpVisitRID);
                            $('#billHPaidAmount').val(0);
                            dcomethealth.PatientResource.searchPatient({"id": data.serReqOpRID}, function (dataPat) {
                                $.each(dataPat, function (pIdx, patient) {
                                    $('#mrnSearch').val(patient.patMrnNo);
                                    $('#PatientName').val(patient.patFullName);
                                    if (patient.patDob !== undefined) {
                                        var c = patient.patDob.split('-');
                                        $('#PatientAge').val(Math.floor((new Date() - new Date(new Date(c[2], c[1] - 1, c[0]))) / (365.25 * 24 * 60 * 60 * 1000)));
                                    }
                                    var gen = '';
                                    if (parseInt(patient.patGenderIndex) === 1) {
                                        gen = 'Male';
                                    } else if (parseInt(patient.patGenderIndex) === 2) {
                                        gen = 'Female';
                                    } else {
                                        gen = 'Transgender';
                                    }
                                    $('#PatientGender').val(gen);
                                    $('#patientMobile').val(patient.patPhoneNo);
                                });
                            });
                            $("#so_tbody").append('<tr><td width="6%"><i class="dct-icon fa fa-minus-circle hidden" onclick="delete_row(this)"></i></td>\n\
                                    <td width="42%"><input type="text" id="serviceName" name="serviceName" value = "' + data.serReqItemName + '" onchange="ClearName(this)" ><input type="hidden" id="serviceRID" name="serviceRID" value="' + data.serReqItemRID + '">\n\
                                    <input type="hidden" id="serviceOrderRID" name="serviceOrderRID" value=""><input id="billDRID" type="hidden" value=""></td><td width="10%"><input id = "qtyService" type = "text" readonly="readonly" value = "' + data.serReqItemQty + '" name = "qtyService" ></td>\n\
                                    <td width="12%"><input type = "text" id = "serviceDisc" name = "serviceDisc" value = ""></td>\n\
                                    <td width="12%"><input type = "text" id = "MRP" name = "MRP" value = "' + data.serReqItemPrice + '" onBlur = "calculation(this)"></td>\n\
                                    <td width="22%"><input type = "text" id = "netAmount" name = "netAmount" value = "" onBlur = "calculation(this)"></td>\n\
                                    <td width="6%"><i class = "dct-icon fa fa-plus-square red" onclick = "insert_row("dyn_table", this)" ></i></td></tr>');
                            var gross = 0, net = 0, disc_total = 0;
                            var table = document.getElementById('dyn_table');
                            var table_length = table.rows.length;
                            for (var i = 0; i < table_length - 1; i++) {
                                var qty_row = dynTableGetNodeInRow(table.rows[i + 1], 'qtyService').value;
                                var mrp = dynTableGetNodeInRow(table.rows[i + 1], 'MRP').value;
                                var serviceDisc = dynTableGetNodeInRow(table.rows[i + 1], 'serviceDisc').value;
                                if (qty_row === '') {
                                    qty_row = 0;
                                }
                                if (serviceDisc === '') {
                                    serviceDisc = 0;
                                }
                                var gross_row = parseFloat(qty_row) * parseFloat(mrp);
                                var disc_calc = 0;
                                if (parseFloat(serviceDisc) !== 0) {
                                    disc_calc = parseFloat(gross_row) * (parseFloat(serviceDisc) / 100)
                                }
                                disc_total = parseFloat(disc_total) + parseFloat(disc_calc);
                                gross = parseFloat(gross) + parseFloat(gross_row);
                                var net_row = parseFloat(gross_row) - parseFloat(disc_calc);
                                dynTableGetNodeInRow(table.rows[i + 1], 'netAmount').value = net_row.toFixed(2);
                                net = parseFloat(net) + parseFloat(net_row);
                                var round = parseInt(net.toFixed(0)) - parseFloat(net);
                            }
                            document.getElementById('serviceGrossAmount').value = gross.toFixed(2);
                            document.getElementById('serviceDiscountAmount').value = disc_total.toFixed(2);
                            document.getElementById('round_off_amount').value = round.toFixed(2);
                            document.getElementById('serviceNetAmount').value = net.toFixed(0);
                            $('#billHDueAmount').val(net.toFixed(0));
                        });
                    });
                }
            }
            $(".btn-primary").off("click").on("click", function () {
                $(".btn-primary").attr("disabled", "disabled");
                var actionBtn = this.id;
                var table = document.getElementById('dyn_table');
                var table_length = table.rows.length;
                for (var i = 0; i < table_length - 1; i++) {
                    var itemname = dynTableGetNodeInRow(table.rows[i + 1], 'serviceName').value;
                    if (itemname === "") {
                        alert("Enter Service Name");
                        setTimeout(function () {
                            dynTableGetNodeInRow(table.rows[i + 1], 'serviceName').focus();
                        }, 1);
                        setTimeout('$(".btn-primary").removeAttr("disabled")', 1500);
//                        $(".btn-primary").removeAttr("disabled");
                        return;
                    }
                }

                if (dcomethealth.actionDatalist === 0) {
                    saveBill(dcomethealth.boRID, "BILL", "BUILTIN_ACTION");
                } else if (dcomethealth.actionDatalist !== 0 && $('#total_pmd').val() === "" && actionBtn !== "CANCEL_BILL") {
                    alert("Payment is empty");
                } else if (parseInt(dcomethealth.bomtypeIndex) === 35) {
                    saveBill(dcomethealth.boRID, "BILL", "BUILTIN_ACTION");
                } else {
                    var i = 1;
                    $.each(dcomethealth.actionDatalist, function (pIdx, action) {
                        if (action.boaCode === actionBtn) {
                            if (i === 1) {
                                var billHDueAmount = document.getElementById('billHDueAmount').value;
                                var total_pmd = document.getElementById('total_pmd').value;
                                if (parseFloat(total_pmd) > parseFloat(billHDueAmount)) {
                                    setTimeout('$(".btn-primary").removeAttr("disabled")', 1500);
                                    alert("Due Amount Is Less");
                                    return false;
                                } else {
                                    dcomethealth.NotificationResource.searchMasterCode(action.boaBomTypeIndex, function (data) {
                                        saveBill(dcomethealth.boRID, data, action.boaCode);
                                    });
                                    i++;
                                }
                            }
                        }
                    });
                }
                setTimeout('$(".btn-primary").removeAttr("disabled")', 1500);
            });
        });
    }
    function payerChange() {
        var payerType = $("#patRefType option:selected").val();
        payerData = {};
        if (parseInt(payerType) != 31) {
            $("#payerInfo").removeClass("hidden").addClass("");
            $("#paymentDiv").addClass("hidden");
            $("#payerName").empty();
            var searchObj = {"pdPayerType": payerType};
            dcomethealth.MasterResource.searchPayerMaster(searchObj, function (data) {
                $('#payerName').append($("<option></option>").attr("value", 0).text("Select Payer"));
                $.each(payerData = data, function (pSx, payer) {
                    $('#payerName').append($("<option></option>").attr("value", payer.pdId).text(payer.pdPayerName));
                });
            });
        } else {
            $("#payerInfo").removeClass("").addClass("hidden");
            $("#paymentDiv").removeClass("hidden");
        }
        payerNameChange();
    }
    function payerNameChange() {
        var payerType = $("#patRefType option:selected").val();
        var table = document.getElementById('dyn_table');
        for (var i = 0; i < table.rows.length - 1; i++) {
            var serviceRid = dynTableGetNodeInRow(table.rows[i + 1], 'serviceRID').value;
            if (parseInt(payerType) != 31 && !!payerData) {
                var payerId = $("#payerName option:selected").val();
                $.each(payerData, function (pdx, payer) {
                    if (payerId == payer.pdId) {
                        $.each(payer.payerServiceMap, function (pEx, payerSerCost) {
                            if (parseInt(serviceRid) == parseInt(payerSerCost.psmServiceRid)) {
                                dynTableGetNodeInRow(table.rows[i + 1], 'MRP').value = payerSerCost.psmDiscountPrice;
                                return false;
                            } else {
                                $.each(dcomethealth.serviceMaster, function (pfx, ServicePr) {
                                    if (parseInt(serviceRid) == parseInt(ServicePr.id)) {
                                        dynTableGetNodeInRow(table.rows[i + 1], 'MRP').value = ServicePr.bPrice;
                                    }
                                });
                            }
                        });
                    }
                });
            } else {
                $.each(dcomethealth.serviceMaster, function (pfx, ServicePr) {
                    if (parseInt(serviceRid) == parseInt(ServicePr.id)) {
                        dynTableGetNodeInRow(table.rows[i + 1], 'MRP').value = ServicePr.bPrice;
                    }
                });
            }
            calculation();
        }
    }
    function autocomplete() {
        $("#" + id + " input[name='serviceName']").item_autocomplete({
            select: function (event, ui) {
                var table = document.getElementById('dyn_table');
                var table_length = table.rows.length;
                var y = table_length - 2;
                for (var i = 0; i < table_length - 1; i++) {
                    dynTableGetNodeInRow(table.rows[y + 1], 'serviceRID').value = ui.item.data.id;
                    dynTableGetNodeInRow(table.rows[y + 1], 'MRP').value = ui.item.data.bPrice;
                    payerNameChange();
                }
            },
            open: function (event, ui) {
                $(document).tooltip({
                    position: {
                        my: "center bottom-20",
                        at: "right center",
                        using: function (position, feedback) {
                            $(this).css(position);
                        }
                    }
                });
            },
            close: function () {
                $(document).tooltip("destroy");
            },
            source: function (request, response) {
                var queryString = request.term;
                queryString = queryString.trim();
                var searchParams = {"bsName": queryString};
                dcomethealth.MasterResource.searchServices(searchParams, function (data) {
                    response($.grep($.map(data, function (item) {
                        return {
                            label: item.bsName || "",
                            value: item.bsName || "",
                            name: (item.bsName || "") + (item.bsName && item.id ? " - " : "") + (item.id || ""),
                            data: item
                        };
                    }), function (item, index) {
                        return index < 10;
                    }));
                });
            },
            minLength: 1
        });
    }
    function mrn_autocomplete() {
        $("#" + id + " input[name='mrnSearch']").item_autocomplete({
            select: function (event, ui) {
                var patMrnNo = ui.item.value;
                $('#patientRID').val(parseInt(ui.item.data.id));
                $('#PatientName').val(ui.item.data.patFullName);
                var c = ui.item.data.patDob.split('-');
                $('#PatientAge').val(Math.floor((new Date() - new Date(new Date(c[2], c[1] - 1, c[0]))) / (365.25 * 24 * 60 * 60 * 1000)));
                var gen = '';
                if (parseInt(ui.item.data.patGenderIndex) === 1) {
                    gen = 'Male';
                } else if (parseInt(ui.item.data.patGenderIndex) === 2) {
                    gen = 'Female';
                } else {
                    gen = 'Transgender';
                }
                $('#PatientGender').val(gen);
                $('#patientMobile').val(ui.item.data.patPhoneNo);
            },
            open: function (event, ui) {
                $(document).tooltip({
                    position: {
                        my: "center bottom-20",
                        at: "right center",
                        using: function (position, feedback) {
                            $(this).css(position);
                        }
                    }
                });
            },
            close: function () {
                $(document).tooltip("destroy");
            },
            source: function (request, response) {
                var queryString = request.term;
                queryString = queryString.trim();
                var searchParams = {"q": queryString};
                dcomethealth.PatientResource.searchPatient(searchParams, function (data) {
                    response($.grep($.map(data, function (item) {
                        return {
                            label: (item.patMrnNo || "") + (item.patMrnNo && item.patPhoneNo ? " - " : "") + (item.patPhoneNo || ""),
                            value: (item.patMrnNo || ""),
                            name: (item.patTitle || "") + (item.patTitle && item.patFullName ? " - " : ""),
                            data: item
                        };
                    }), function (item, index) {
                        return index < 10;
                    }));
                });
            },
            minLength: 1
        });
    }
    function saveBill(boRID, boCode, actionCode) {
        var totalPaid = 0.00;
        var billDList = [], pmdList = [], receiptDList = [], serviceRequestsList = [];
        var billH = {};
        var receiptHList = [];
        var receiptH = {};
        var table = document.getElementById('dyn_table');
        var table_length = table.rows.length;
        for (var i = 0; i < table_length - 1; i++) {
            var billD = {};
            var serviceRequest = {};
            if ($("#billDRID").val() !== "") {
                billD.id = dynTableGetNodeInRow(table.rows[i + 1], 'billDRID').value;
                serviceRequest.serReqBillDRID = dynTableGetNodeInRow(table.rows[i + 1], 'billDRID').value;
            }
            billD.bdItemType = "Service";
            billD.bdItemName = dynTableGetNodeInRow(table.rows[i + 1], 'serviceName').value;
            if (dynTableGetNodeInRow(table.rows[i + 1], 'serviceOrderRID').value !== "") {
                billD.bdItemOrderRID = dynTableGetNodeInRow(table.rows[i + 1], 'serviceOrderRID').value;
            }
            billD.bdItemRID = dynTableGetNodeInRow(table.rows[i + 1], 'serviceRID').value;
            billD.bdQty = dynTableGetNodeInRow(table.rows[i + 1], 'qtyService').value;
            billD.bdPrice = dynTableGetNodeInRow(table.rows[i + 1], 'MRP').value;
            billD.bdGrossAmount = dynTableGetNodeInRow(table.rows[i + 1], 'qtyService').value * dynTableGetNodeInRow(table.rows[i + 1], 'MRP').value;
            if (dynTableGetNodeInRow(table.rows[i + 1], 'serviceDisc').value !== "") {
                billD.bdDiscountAmount = dynTableGetNodeInRow(table.rows[i + 1], 'serviceDisc').value;
            } else {
                billD.bdDiscountAmount = 0;
            }
            billD.bdNetAmount = dynTableGetNodeInRow(table.rows[i + 1], 'netAmount').value;
            billDList.push(billD);
            if (!!boRID) {
                serviceRequest.id = boRID;
            }
//            serviceRequest.serReqOpVisitRID = $('.activeVisitRid').val();
            serviceRequest.serReqOpRID = $('#patientRID').val();
            serviceRequest.serPatientName = $('#PatientName').val();
//            serviceRequest.serPatientMrn = $('#mrnSearch').val();
            serviceRequest.serReqItemRID = dynTableGetNodeInRow(table.rows[i + 1], 'serviceRID').value;
            serviceRequest.serReqItemName = dynTableGetNodeInRow(table.rows[i + 1], 'serviceName').value;
            serviceRequest.serReqItemQty = dynTableGetNodeInRow(table.rows[i + 1], 'qtyService').value;
            if ($("#billHRID").val() !== "") {
                serviceRequest.serReqBillHRID = $("#billHRID").val();
            }
//            serviceRequest.serReqProcessDate = dynTableGetNodeInRow(tableService.rows[i + 1], 'diaProcessDate').value;
            serviceRequestsList.push(serviceRequest);
        }
        var serviceNetAmount = document.getElementById('serviceNetAmount').value;
        var total_pmd = document.getElementById('total_pmd').value;
        if (total_pmd === "") {
            total_pmd = 0;
        }
        if (serviceNetAmount === "") {
            alert("Bill Amount is empty");
            return false;
        } else if (parseFloat(serviceNetAmount) < parseFloat(total_pmd)) {
            alert("Net amount is lesser than Total amount paid");
            return false;
        }
        if ($("#billHRID").val() !== "") {
            billH.id = $("#billHRID").val();
            if ($("#visitRID").val() !== "") {
                billH.bhPatientVisitRID = $("#visitRID").val();
            }
        }
        if ($("#patientRID").val() !== "") {
            billH.bhPatientRID = $("#patientRID").val();
            receiptH.rhPayerRID = $("#patientRID").val();
        } else {
            alert("Patient Not Registered Yet");
            return false;
        }
        billH.bhBillNo = $('#billNo').val();
        billH.bhPatientName = $("#PatientName").val();
        billH.bhPatientNo = $("#patientMobile").val();
        billH.bhDocRefRID = $("#VDName").val();
        billH.bhType = 1; // OP bill type : 1;
        billH.bhGrossAmount = $("#serviceGrossAmount").val();
        billH.bhTotalDiscountAmount = $("#serviceDiscountAmount").val();
        billH.bhNetAmount = $("#serviceNetAmount").val();
        billH.bhDiscount = $("#serviceDiscountAmount").val();
        billH.bhPayerType = $("#patRefType").val();
        billH.bhPayerRID = $("#payerName").val();
        billH.bhUnitRID = dcomethealth.selectedunit; // user selected unit;

        receiptH.rhPaidAmount = parseFloat(total_pmd);
        receiptH.rhTotalAmount = $("#serviceNetAmount").val();
        receiptH.rhPayerName = $("#PatientName").val();
        receiptH.rhPayerNo = $("#patientMobile").val();

        if (parseFloat(total_pmd) !== 0) {
            var table2 = document.getElementById('pmd_table');
            var table_length2 = table2.rows.length;
            for (var j = 0; j < table_length2; j++) {
                var pmd = {};
                var receiptDPmd = {};
                pmd.pmdTransType = 3;
                pmd.pmdPaymentMode = dynTableGetNodeInRow(table2.rows[j], 'pay_mode_ddict').value;
                pmd.pmdCardType = dynTableGetNodeInRow(table2.rows[j], 'cardtype').value;
                pmd.pmdDocNo = dynTableGetNodeInRow(table2.rows[j], 'cheqno').value;
                pmd.pmdDocDate = dynTableGetNodeInRow(table2.rows[j], 'cheqdate').value;
                pmd.pmdDocExpDate = dynTableGetNodeInRow(table2.rows[j], 'expdate').value;
                pmd.pmdDocApprovalNo = dynTableGetNodeInRow(table2.rows[j], 'approvalno').value;
                pmd.pmdBankName = dynTableGetNodeInRow(table2.rows[j], 'bankname').value;
                pmd.pmdBankDetails = dynTableGetNodeInRow(table2.rows[j], 'branchname').value;
                pmd.pmdAmount = dynTableGetNodeInRow(table2.rows[j], 'pmd_amount').value;
//                        child2.pmdCurrencyRID = dynTableGetNodeInRow(table.rows[i + 1], 'retailNetAmount').value;
//                        child2.pmdCurrencyValue = dynTableGetNodeInRow(table.rows[i + 1], 'retailNetAmount').value;
//                        child2.pmdCurrencyExchangeRate = dynTableGetNodeInRow(table.rows[i + 1], 'retailNetAmount').value;
//                        child2.pmdDisplaySymbol = dynTableGetNodeInRow(table.rows[i + 1], 'retailNetAmount').value;
//                        child2.pmdRemarks = dynTableGetNodeInRow(table.rows[i + 1], 'retailNetAmount').value;
//                        child2.pmdCardHolderName = dynTableGetNodeInRow(table.rows[i + 1], 'retailNetAmount').value;
                pmdList.push(pmd);
                receiptDPmd.rdBillAmount = $("#serviceNetAmount").val();
                receiptDPmd.rdPaidAmount = dynTableGetNodeInRow(table2.rows[j], 'pmd_amount').value;
                receiptDList.push(receiptDPmd);
            }
            receiptH.receiptD = receiptDList;
            receiptH.paymentModeDetails = pmdList;
            receiptHList.push(receiptH);
        }
        if ($("#billHPaidAmount").val() !== "") {
            billH.bhPaidAmount = parseFloat(totalPaid) + parseFloat(total_pmd) + parseFloat($("#billHPaidAmount").val());
        } else {
            billH.bhPaidAmount = parseFloat(totalPaid) + parseFloat(total_pmd);
        }
        billH.billD = billDList;
        if (parseInt(dcomethealth.bomtypeIndex) === 35) {
            billH.serviceRequest = serviceRequestsList;
            boRID = 0;
        }
        if (actionCode !== "CANCEL_BILL") {
            billH.receiptH = receiptHList;
        }
        var args = boRID + "/" + boCode + "/" + actionCode;
        dcomethealth.BillingResource.saveBill(billH, args)
                .done(function (data, textStatus, jqXHR) {
                    alert("Saved");
                    dcomethealth.util.loadpage('CreateOPBill');
                    dcomethealth.util.base_init();
                    loadNotification();
                }).fail(function (jqXHR, textStatus, errorThrown) {
            alert("Failed");
        });
    }
    function refreshData() {
    }
    return {
        parameters: parameters,
        init: init,
        autocomplete: autocomplete,
        payerChange: payerChange,
        payerNameChange: payerNameChange,
        mrn_autocomplete: mrn_autocomplete,
        saveBill: saveBill,
        refreshData: refreshData
    };
}());

dcomethealth.CreateOPBill.init();